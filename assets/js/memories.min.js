document.addEventListener("DOMContentLoaded", () => {
    function e() {
        u && u.destroy();
        const e = lottie.loadAnimation({
            container: r,
            renderer: "svg",
            loop: !1,
            autoplay: !0,
            path: "https://fonts.gstatic.com/s/e/notoemoji/latest/1f494/lottie.json"
        });
        e.addEventListener("complete", () => {
            e.destroy(), u = lottie.loadAnimation({
                container: r,
                renderer: "svg",
                loop: !0,
                autoplay: !0,
                path: "https://fonts.gstatic.com/s/e/notoemoji/latest/2764_fe0f/lottie.json"
            })
        })
    }

    function t() {
        gsap.to(".safe-container", {
            x: 10,
            duration: .1,
            yoyo: !0,
            repeat: 3,
            ease: "power2.inOut"
        }), e(), setTimeout(() => {
            p.value = "", h(0)
        }, 100)
    }

    function o() {
        function e() {
            const e = new Date,
                t = e - a,
                o = Math.floor(t / 864e5),
                n = Math.floor(t % 864e5 / 36e5),
                i = Math.floor(t % 36e5 / 6e4),
                s = Math.floor(t % 6e4 / 1e3);
            document.querySelector(".days").textContent = o, document.querySelector(".hours").textContent = n, document.querySelector(".minutes").textContent = i, document.querySelector(".seconds").textContent = s
        }
        const t = document.createElement("div");
        t.className = "music-container opacity-0";
        const o = `https://img.youtube.com/vi/${setVideoId}/maxresdefault.jpg`;
        t.innerHTML = `\n            <div class="vinyl-player">\n                <div class="vinyl-record">\n                    <img src="${o}" alt="Album Cover">\n                </div>\n                <div class="play-button">\n                    <i class="ri-play-fill"></i>\n                </div>\n                <div id="youtube-player"></div>\n            </div>\n            <div class="time-together opacity-0">\n                <div id="couple-animation" class="couple-animation mb-8"></div>\n                <h2>เราคบกันมาแล้ว</h2>\n                <div class="time-counters">\n                    <div class="time-row">\n                        <div class="time-item">\n                            <span class="count days">0</span>\n                            <span class="label">วัน</span>\n                        </div>\n                        <div class="time-item">\n                            <span class="count hours">0</span>\n                            <span class="label">ชั่วโมง</span>\n                        </div>\n                    </div>\n                    <div class="time-row">\n                        <div class="time-item">\n                            <span class="count minutes">0</span>\n                            <span class="label">นาที</span>\n                        </div>\n                        <div class="time-item">\n                            <span class="count seconds">0</span>\n                            <span class="label">วินาที</span>\n                        </div>\n                    </div>\n                </div>\n                <button class="next-button opacity-0">\n                    <span>ดูความทรงจำของเรา</span>\n                    <i class="ri-arrow-right-line"></i>\n                </button>\n            </div>\n        `, t.style.pointerEvents = "auto", document.body.appendChild(t), lottie.loadAnimation({
            container: document.getElementById("couple-animation"),
            renderer: "svg",
            loop: !0,
            autoplay: !0,
            path: "assets/img/lottie/Animation - 1739014552165.json"
        });
        const a = new Date(setStartDate);
        let i;
        i = new YT.Player("youtube-player", {
            videoId: setVideoId,
            playerVars: {
                autoplay: 0,
                controls: 0,
                loop: 1,
                playlist: setVideoId,
                fs: 0
            },
            events: {
                onReady: function(t) {
                    function o(t) {
                        if (t.stopPropagation(), i.getPlayerState() !== YT.PlayerState.PLAYING) {
                            i.playVideo(), a.classList.add("playing");
                            const t = gsap.timeline();
                            t.to(".vinyl-player", {
                                scale: 1.1,
                                duration: .3,
                                ease: "power2.out"
                            }).to(".vinyl-player", {
                                opacity: 0,
                                scale: .8,
                                duration: .5,
                                ease: "power2.in",
                                pointerEvents: "none"
                            }).to(".time-together", {
                                opacity: 1,
                                duration: .8,
                                ease: "power2.out",
                                onComplete: () => {
                                    document.querySelector(".time-together").classList.add("active")
                                }
                            }).to(".time-together h2", {
                                opacity: 1,
                                y: 0,
                                duration: .6,
                                ease: "back.out(1.7)"
                            }).to(".time-counters", {
                                opacity: 1,
                                y: 0,
                                duration: .6,
                                ease: "back.out(1.7)"
                            }, "-=0.3").to(".next-button", {
                                opacity: 1,
                                y: 0,
                                duration: .6,
                                ease: "back.out(1.7)",
                                onComplete: () => {
                                    const e = document.querySelector(".next-button");
                                    e && !e.hasAttribute("data-initialized") && (e.setAttribute("data-initialized", "true"), e.addEventListener("click", n))
                                }
                            }, "-=0.3"), e(), setInterval(e, 1e3)
                        }
                    }
                    const a = document.querySelector(".vinyl-record"),
                        s = document.querySelector(".vinyl-player"),
                        c = document.querySelector(".play-button");
                    s.addEventListener("click", o), c.addEventListener("click", o)
                },
                onStateChange: function(e) {
                    const t = document.querySelector(".vinyl-record"),
                        o = document.querySelector(".play-button");
                    e.data === YT.PlayerState.ENDED && i.playVideo(), e.data === YT.PlayerState.PAUSED && (t.classList.remove("playing"), o.innerHTML = '<i class="ri-play-fill"></i>'), e.data === YT.PlayerState.PLAYING && (t.classList.add("playing"), o.innerHTML = '<i class="ri-pause-fill"></i>')
                }
            }
        });
        const s = gsap.timeline();
        s.to([".banner-container", ".safe-container"], {
            opacity: 0,
            y: -50,
            duration: .8,
            ease: "power2.inOut",
            onComplete: () => {
                document.querySelector(".banner-container").remove(), document.querySelector(".safe-container").remove(), document.querySelector(".safe-wrapper").remove()
            }
        }).to(".music-container", {
            opacity: 1,
            y: 0,
            duration: 1,
            ease: "power2.out",
            onComplete: () => {
                t.classList.add("active")
            }
        })
    }

    function n() {
        const e = document.querySelector(".gallery-container"),
            t = gsap.timeline();
        e.classList.add("active"), t.to(".time-together", {
            opacity: 0,
            duration: .5,
            ease: "power2.inOut",
            pointerEvents: "none"
        }).set(".gallery-container", {
            display: "flex",
            opacity: 0
        }).to(".gallery-container", {
            opacity: 1,
            duration: .5,
            ease: "power2.out"
        }).to(".gallery-next-button", {
            opacity: 1,
            duration: .5,
            ease: "power2.out"
        }).call(() => {
            new Swiper(".memory-swiper", {
                effect: "cards",
                grabCursor: !0,
                initialSlide: 0,
                loop: !1,
                pagination: {
                    el: ".swiper-pagination",
                    clickable: !0
                },
                cardsEffect: {
                    slideShadows: !1,
                    perSlideRotate: 2,
                    perSlideOffset: 12
                }
            });
            gsap.to(".memory-card", {
                scale: 1,
                opacity: 1,
                duration: .8,
                stagger: .1,
                ease: "back.out(1.7)"
            }), document.querySelector(".gallery-next-button").addEventListener("click", a)
        })
    }

    function a() {
        const e = document.querySelector(".puzzle-container"),
            t = document.querySelector(".gallery-container");
        t.classList.add("fade-out"), setTimeout(() => {
            t.style.display = "none", t.classList.remove("fade-out"), e.classList.add("active");
            const o = document.getElementById("puzzle-target-image"),
                n = document.querySelector(".next-section-button"),
                a = document.getElementById("forPuzzle");
            t.style.display = "none", e.classList.add("active"), a.innerHTML = "", events = [], window.puzzle = null, window.autoStart = !0, window.checkComplete = !1, gsap.to(e, {
                opacity: 1,
                duration: .5,
                ease: "power2.out",
                onComplete: () => {
                    window.puzzle = new Puzzle({
                        container: "forPuzzle",
                        nbPieces: 9,
                        imageUrl: o.src
                    }), gsap.to(n, {
                        opacity: 1,
                        y: 0,
                        duration: .5,
                        ease: "back.out(1.7)"
                    });
                    const e = new Image;
                    e.onload = (() => {
                        setTimeout(() => {
                            events.push({
                                event: "nbpieces",
                                nbpieces: 9
                            })
                        }, 500)
                    }), e.src = o.src
                }
            }), n.addEventListener("click", i, {
                once: !0
            })
        }, 500)
    }

    function i() {
        const e = document.querySelector(".message-container"),
            t = document.querySelector(".puzzle-container"),
            o = document.createElement("div");
        o.style.cssText = "\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100vw;\n            height: 100vh;\n            pointer-events: none;\n            z-index: 1000;\n        ", document.body.appendChild(o);
        for (let e = 0; e < 20; e++) {
            const e = document.createElement("div");
            e.style.cssText = `\n                position: absolute;\n                bottom: -100px;\n                left: ${100*Math.random()}vw;\n                width: ${250*Math.random()+80}px;\n                height: ${250*Math.random()+80}px;\n            `, o.appendChild(e), lottie.loadAnimation({
                container: e,
                renderer: "svg",
                loop: !0,
                autoplay: !0,
                path: "https://fonts.gstatic.com/s/e/notoemoji/latest/1f970/lottie.json"
            }), gsap.to(e, {
                y: -window.innerHeight - 200,
                x: "random(-100, 100)",
                duration: 3 * Math.random() + 2,
                ease: "power1.out",
                delay: 1 * Math.random(),
                onComplete: () => e.remove()
            })
        }
        e.style.display = "block", e.style.opacity = "0";
        const n = gsap.timeline();
        n.to(t, {
            y: -50,
            opacity: 0,
            duration: .8,
            ease: "power2.in",
            onComplete: () => {
                t.style.display = "none", setTimeout(() => {
                    o.remove()
                }, 5e3)
            }
        }).to(e, {
            opacity: 1,
            duration: .8,
            ease: "power2.out",
            onComplete: () => {
                const e = document.querySelector(".message-text"),
                    t = document.querySelector(".skip-button"),
                    o = document.querySelector(".secret-button");
                let n = "";
                e.classList.add("typing");
                const a = setMessage,
                    i = setInterval(() => {
                        n.length < a.length ? (n += a[n.length], e.textContent = n) : (clearInterval(i), e.classList.remove("typing"), t.style.opacity = "0", gsap.to(o, {
                            opacity: 1,
                            y: 0,
                            duration: .5,
                            ease: "back.out(1.7)"
                        }), setTimeout(() => t.remove(), 300))
                    }, 100);
                t.addEventListener("click", () => {
                    clearInterval(i), e.classList.remove("typing"), e.textContent = a, t.style.opacity = "0", gsap.to(o, {
                        opacity: 1,
                        y: 0,
                        duration: .5,
                        ease: "back.out(1.7)"
                    }), setTimeout(() => t.remove(), 300)
                }), o.addEventListener("click", s)
            }
        })
    }

    function s() {
        function e() {
            i.width = i.offsetWidth, i.height = i.offsetHeight;
            const e = l.createLinearGradient(0, 0, i.width, i.height);
            e.addColorStop(0, "#ff69b4"), e.addColorStop(1, "#ff1493"), l.fillStyle = e, l.fillRect(0, 0, i.width, i.height), l.font = 'bold 24px "Noto Sans Thai"', l.textAlign = "center", l.textBaseline = "middle", l.fillStyle = "white", l.fillText("ขูดเพื่อดูความลับ", i.width / 2, i.height / 2 - 30), l.font = '32px "remixicon"', l.fillText("", i.width / 2, i.height / 2 + 30)
        }

        function t(e, t) {
            const o = Date.now();
            if (o - p < y || g >= m) return;
            p = o, g++;
            const n = document.createElement("div");
            n.style.cssText = `\n                position: absolute;\n                left: ${e}px;\n                top: ${t}px;\n                width: 30px;  // ลดขนาดลงเล็กน้อย\n                height: 30px;\n                pointer-events: none;\n                z-index: 1001;\n            `, a.appendChild(n);
            lottie.loadAnimation({
                container: n,
                renderer: "svg",
                loop: !1,
                autoplay: !0,
                path: "https://fonts.gstatic.com/s/e/notoemoji/latest/2728/lottie.json"
            });
            gsap.to(n, {
                y: -80,
                x: gsap.utils.random(-30, 30),
                opacity: 0,
                duration: .8,
                ease: "power1.out",
                onComplete: () => {
                    n.remove(), g--
                }
            })
        }

        function o(e) {
            if (!r) return;
            const o = i.getBoundingClientRect(),
                n = e.type.includes("touch") ? e.touches[0].clientX - o.left : e.clientX - o.left,
                a = e.type.includes("touch") ? e.touches[0].clientY - o.top : e.clientY - o.top;
            l.globalCompositeOperation = "destination-out", l.lineWidth = 40, l.lineCap = "round", l.lineJoin = "round", l.beginPath(), l.moveTo(d, u), l.lineTo(n, a), l.stroke(), Math.random() > .5 && t(e.type.includes("touch") ? e.touches[0].clientX : e.clientX, e.type.includes("touch") ? e.touches[0].clientY : e.clientY), d = n, u = a
        }
        const n = document.querySelector(".message-container"),
            a = document.querySelector(".scratch-container"),
            i = document.getElementById("scratch-card"),
            s = document.querySelector(".home-button"),
            c = document.querySelector(".scratch-content");
        c && (c.style.opacity = "0"), a.style.display = "flex", a.style.opacity = "0";
        const l = i.getContext("2d");
        let r = !1,
            d = 0,
            u = 0,
            p = 0;
        const y = 150,
            m = 10;
        let g = 0;
        i.addEventListener("mousedown", e => {
            r = !0;
            const t = i.getBoundingClientRect();
            d = e.clientX - t.left, u = e.clientY - t.top
        }), i.addEventListener("touchstart", e => {
            e.preventDefault(), r = !0;
            const t = i.getBoundingClientRect();
            d = e.touches[0].clientX - t.left, u = e.touches[0].clientY - t.top
        }), i.addEventListener("mousemove", o), i.addEventListener("touchmove", e => {
            e.preventDefault(), o(e)
        }), i.addEventListener("mouseup", () => r = !1), i.addEventListener("touchend", () => r = !1), i.addEventListener("mouseleave", () => r = !1), gsap.set(s, {
            opacity: 1,
            y: 0
        }), s.addEventListener("click", () => {
            gsap.to(a, {
                opacity: 0,
                duration: .8,
                ease: "power2.inOut",
                onComplete: () => {
                    window.location.href = "index.html"
                }
            })
        });
        const v = gsap.timeline();
        v.to(n, {
            opacity: 0,
            y: -50,
            duration: .5,
            ease: "power2.inOut",
            onComplete: () => {
                n.style.display = "none", e()
            }
        }).set(i, {
            opacity: 0
        }).to(a, {
            opacity: 1,
            y: 0,
            duration: .5,
            ease: "power2.out"
        }).to(i, {
            opacity: 1,
            duration: .3,
            ease: "power2.out"
        }).to(c, {
            opacity: 1,
            duration: .3,
            delay: .5
        })
    }

    function c(e) {
        console.log("Password Entered:", e, "Correct Password:", m);
        e.toString().trim() === m.toString().trim() ? gsap.to(".safe-container", {
            scale: 1.05,
            duration: 0.3,
            yoyo: !0,
            repeat: 1,
            onComplete: o
        }) : t();
    }

    function l(e) {
        p.value.length < 6 && (p.value += e, h(p.value.length), 6 === p.value.length && c(p.value))
    }
    const r = document.getElementById("heart-container");
    gsap.set("body", {
        opacity: 0
    }), gsap.set(".banner-container", {
        opacity: 0,
        y: 20
    }), gsap.set(".safe-container", {
        opacity: 0,
        y: 30,
        scale: .95
    });
    const d = gsap.timeline({
        delay: .3
    });
    d.to("body", {
        opacity: 1,
        duration: .8,
        ease: "power2.out"
    }).to(".banner-container", {
        opacity: 1,
        y: 0,
        duration: 1.2,
        ease: "power2.out"
    }).to(".safe-container", {
        opacity: 1,
        y: 0,
        scale: 1,
        duration: 1,
        ease: "back.out(1.7)"
    }, "-=0.7");
    let u = lottie.loadAnimation({
        container: document.getElementById("heart-container"),
        renderer: "svg",
        loop: !0,
        autoplay: !0,
        path: "https://fonts.gstatic.com/s/e/notoemoji/latest/2764_fe0f/lottie.json"
    });
    const p = document.querySelector(".password-input"),
        y = document.querySelectorAll(".dot"),
        m = setCorrectPassword;
    gsap.set(".memory-img", {
        opacity: 0,
        y: 50,
        scale: .8,
        rotate: gsap.utils.random(-10, 10)
    });
    const g = gsap.timeline({
        delay: .5
    });
    g.to(".memory-img", {
        opacity: 1,
        y: 0,
        scale: 1,
        duration: 1.2,
        stagger: {
            amount: 1,
            from: "random"
        },
        ease: "power4.out"
    }).to(".safe-container", {
        opacity: 1,
        y: 0,
        duration: .8,
        ease: "power2.out"
    }, "-=0.5"), document.querySelectorAll(".memory-img").forEach(e => {
        e.addEventListener("mouseenter", () => {
            gsap.to(e, {
                scale: 1.05,
                rotate: 0,
                zIndex: 5,
                duration: .3
            })
        }), e.addEventListener("mouseleave", () => {
            gsap.to(e, {
                scale: 1,
                rotate: e._gsap.vars.rotate,
                zIndex: 1,
                duration: .3
            })
        })
    });
    const v = document.querySelectorAll(".key-btn"),
        h = e => {
            y.forEach((t, o) => {
                t.classList.toggle("filled", o < e)
            })
        };
    v.forEach(e => {
        e.addEventListener("click", () => {
            gsap.to(e, {
                scale: .95,
                duration: .1,
                yoyo: !0,
                repeat: 1
            }), e.classList.contains("clear") ? (p.value = "", h(0)) : e.classList.contains("enter") ? 4 === p.value.length && c(p.value) : l(e.textContent)
        })
    })
});
document.addEventListener("click", () => {
    if (i && i.playVideo) {
        i.playVideo();
    }
}, { once: true }); // ให้เล่นเพลงเมื่อแตะจอครั้งแรก
document.getElementById('youtube-player').addEventListener('click', function () {
    if (player && player.playVideo) {
        player.playVideo();
    }
});
